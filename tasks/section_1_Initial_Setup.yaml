---
# 1.1.1 Disable unused filesystems
# 1.1.1.1 Ensure mounting of cramfs filesystems is disabled
# Removing support for unneeded filesystem types reduces the local attack surface of the
# server. If this filesystem type is not needed, disable it.
- name: 1.1.1.1 Ensure mounting of cramfs filesystems is disabled
  block:
    - name: 1.1.1.1 Ensure mounting of cramfs filesystems is disabled
      lineinfile:
        dest: /etc/modprobe.d/CIS.conf
        regexp: "^(#)?install cramfs(\\s|$)"
        line: "install cramfs /bin/true"
        state: present
        owner: root
        group: root
        mode: 0644
        create: true
    - name: 1.1.1.1 Ensure mounting of cramfs filesystems is disabled | modprobe
      modprobe:
        name: cramfs
        state: absent
  when: disable_cramfs
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.1.1.1
    - filesystems
    - cramfs
    - modprobe
# 1.1.1.2 Ensure mounting of freevxfs filesystems is disabled
# The freevxfs filesystem type is a free version of the Veritas type filesystem. This is the
# primary filesystem type for HP-UX operating systems.
- name: 1.1.1.2 Ensure mounting of freevxfs filesystems is disabled
  block:
    - name: 1.1.1.2 Ensure mounting of freevxfs filesystems is disabled
      lineinfile:
        dest: /etc/modprobe.d/CIS.conf
        regexp: "^(#)?install freevxfs"
        line: "install freevxfs /bin/true"
        state: present
        create: true
    - name: 1.1.1.2 Ensure mounting of freevxfs filesystems is disabled | modprobe
      modprobe:
        name: freevxfs
        state: absent
  when: disable_freevxfs
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.1.1.2
    - filesystems
    - freevxfs
    - modprobe
# 1.1.1.3 Ensure mounting of jffs2 filesystems is disabled
# The jffs2 (journaling flash filesystem 2) filesystem type is a log-structured filesystem used
# in flash memory devices.
- name: 1.1.1.3 Ensure mounting of jffs2 filesystems is disabled
  block:
    - name: 1.1.1.3 Ensure mounting of jffs2 filesystems is disabled
      lineinfile:
        dest: /etc/modprobe.d/CIS.conf
        regexp: "^(#)?install jffs2(\\s|$)"
        line: "install jffs2 /bin/true"
        state: present
        create: true
    - name: 1.1.1.3 Ensure mounting of jffs2 filesystems is disabled
      modprobe:
        name: jffs2
        state: absent
  when: disable_jffs2
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.1.1.3
    - filesystems
    - jffs2
    - modprobe
# 1.1.1.4 Ensure mounting of hfs filesystems is disabled
# The hfs filesystem type is a hierarchical filesystem that allows you to mount Mac OS
# filesystems.
- name: 1.1.1.4 Ensure mounting of hfs filesystems is disabled
  block:
    - name: 1.1.1.4 Ensure mounting of hfs filesystems is disabled
      lineinfile:
        dest: /etc/modprobe.d/CIS.conf
        regexp: "^(#)?install hfs(\\s|$)"
        line: "install hfs /bin/true"
        state: present
        create: true
    - name: 1.1.1.4 Ensure mounting of hfs filesystems is disabled | modprobe
      modprobe:
        name: hfs
        state: absent
  when: disable_hfs
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.1.1.4
    - filesystems
    - modprobe
    - hfs
# 1.1.1.5 Ensure mounting of hfsplus filesystems is disabled
# The hfsplus filesystem type is a hierarchical filesystem designed to replace hfs that allows
# you to mount Mac OS filesystems.
- name: 1.1.1.5 Ensure mounting of hfsplus filesystems is disabled
  block:
    - name: 1.1.1.5 Ensure mounting of hfsplus filesystems is disabled
      lineinfile:
        dest: /etc/modprobe.d/CIS.conf
        regexp: "^(#)?install hfsplus(\\s|$)"
        line: "install hfsplus /bin/true"
        state: present
        create: true
    - name: 1.1.1.5 Ensure mounting of hfsplus filesystems is disabled | modprobe
      modprobe:
        name: hfsplus
        state: absent
  when: disable_hfsplus
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.1.1.5
    - filesystems
    - hfsplus
    - modprobe
# 1.1.1.6 Ensure mounting of udf filesystems is disabled
# The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 and
# ECMA-167 specifications. This is an open vendor filesystem type for data storage on a
# broad range of media. This filesystem type is necessary to support writing DVDs and newer
# optical disc formats.
- name: 1.1.1.6 Ensure mounting of udf filesystems is disabled
  block:
    - name: 1.1.1.6 Ensure mounting of udf filesystems is disabled
      lineinfile:
        dest: /etc/modprobe.d/CIS.conf
        regexp: "^(#)?install udf(\\s|$)"
        line: "install udf /bin/true"
        state: present
        create: true
    - name: 1.1.1.6 Ensure mounting of udf filesystems is disabled | modprobe
      modprobe:
        name: udf
        state: absent
  when: disable_udf
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.1.1.6
    - filesystems
    - udf
    - modprobe
# 1.1.1.7 Ensure mounting of FAT filesystems is limited
# The FAT filesystem format is primarily used on older windows systems and portable USB
# drives or flash modules. It comes in three types FAT12 , FAT16 , and FAT32 all of which are
# supported by the vfat kernel module.
#Note:
# The FAT filesystem format is used by UEFI systems for the EFI boot partition. Disabling the
# vfat module can prevent boot on UEFI systems.
- name: 1.1.1.7 Ensure mounting of FAT filesystems is limited
  block:
    - name: 1.1.1.7 Ensure mounting of FAT filesystems is limited
      lineinfile:
        dest: /etc/modprobe.d/CIS.conf
        regexp: "^(#)?install vfat(\\s|$)"
        line: "install vfat /bin/true"
        state: present
        create: true
    - name: 1.1.1.7 Ensure mounting of FAT filesystems is limited | modprobe
      modprobe:
        name: vfat
        state: absent
  when: disable_fat
  tags:
    - section1
    - level_2_server
    - level_2_workstation
    - 1.1.1.7
    - filesystems
    - fat
    - modprobe
# 1.1.24 Disable USB Storage
# USB storage provides a means to transfer and store files insuring persistence and
# availability of the files independent of network connection status. Its popularity and utility
# has led to USB-based malware being a simple and common means for network infiltration
# and a first step to establishing a persistent threat within a networked environment.
# Note: An alternative solution to disabling the usb-storage module may be found in USBGuard.
# Use of USBGuard and construction of USB device policies should be done in alignment with
# site policy.
- name: 1.1.24 Disable USB Storage
  block:
    - name: 1.1.24 Disable USB Storage | modprobe
      lineinfile:
        dest: /etc/modprobe.d/CIS.conf
        regexp: "^(#)?install usb-storage(\\s|$)"
        line: "install usb-storage /bin/true"
        state: present
        create: true
    - name: 1.1.24 Disable USB Storage
      modprobe:
        name: usb-storage
        state: absent
  when: disable_usb
  tags:
    - section1
    - level_1_server
    - level_2_workstation
    - 1.1.24
# 1.2 Configure Software Updates
# For the purpose of this benchmark, the requirement is to ensure that a patch management
# system is configured and maintained. The specifics on patch update procedures are left to
# the organization.
# 1.2.1 Ensure package manager repositories are configured
# Systems need to have package manager repositories configured to ensure they receive the
# latest patches and updates.
- name: 1.2.1 Ensure package manager repositories are configured
  debug:
    msg: |
      Run the following command and verify package repositories are configured correctly
      > apt-cache policy
      Remediation:
      Configure your package manager repositories according to site policy
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.2.1
# 1.2.2 Ensure GPG keys are configured
# Most packages managers implement GPG key signing to verify package integrity during installation.
# It is important to ensure that updates are obtained from a valid source to protect against
# spoofing that could lead to the inadvertent installation of malware on the system
- name: 1.2.2 Ensure GPG keys are configured
  debug:
    msg: |
      Audit:
      Verify GPG keys are configured correctly for your package manager:
      > apt-key list
      Remediation:
      Update your package manager GPG keys in accordance with site policy.
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.2.2
    - diy
# 1.3 Configure sudo
# sudo allows a permitted user to execute a command as the superuser or another user, as
# specified by the security policy. The invoking user's real (not effective) user ID is used to
# determine the user name with which to query the security policy.
# sudo supports a plugin architecture for security policies and input/output logging. Third
# parties can develop and distribute their own policy and I/O logging plugins to work
# seamlessly with the sudo front end. The default security policy is sudoers, which is
# configured via the file /etc/sudoers.
# sudo can be configured to run only from a pseudo-pty
# Note: visudo edits the sudoers file in a safe fashion, analogous to vipw(8). visudo locks the
# sudoers file against multiple simultaneous edits, provides basic sanity checks, and checks or
# parse errors. If the sudoers file is currently being edited you will receive a message to try
# again later.
- name: 1.3.2 Ensure sudo commands use pty
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "^Defaults use_pty"
    line: "Defaults use_pty"
    validate: "visudo -cf %s"
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.3.2
# 1.3.3 Ensure sudo log file exists
# sudo can use a custom log file.
# Note: visudo edits the sudoers file in a safe fashion, analogous to vipw(8). visudo locks the
# sudoers file against multiple simultaneous edits, provides basic sanity checks, and checks or
# parse errors. If the sudoers file is currently being edited you will receive a message to try
# again later.
- name: 1.3.3 Ensure sudo log file exists
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "^Defaults logfile.*"
    line: 'Defaults logfile="/var/log/sudo.log"'
    validate: "visudo -cf %s"
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.3.3
# 1.6.4 Ensure core dumps are restricted
# A core dump is the memory of an executable program. It is generally used to determine
# why a program aborted. It can also be used to glean confidential information from a core
# file. The system provides the ability to set a soft limit for core dumps, but this can be
# overridden by the user.
- name: 1.6.4 Ensure core dumps are restricted
  block:
    - name: 1.6.4 Ensure core dumps are restricted
      sysctl:
        name: fs.suid_dumpable
        value: "0"
        state: present
        reload: true
        sysctl_set: true
        ignoreerrors: true
    - name: 1.6.4 Ensure core dumps are restricted
      lineinfile:
        dest: /etc/security/limits.conf
        line: "*                hard    core            0"
        regexp: '(^#)?\*\s+hard\s+core\s+[0-9]+'
        state: present
        create: true
        insertbefore: "# End of file"
    - name: 1.6.4 Ensure core dumps are restricted
      apt:
        name: systemd-coredump
        state: present
    - name: 1.6.4 Ensure core dumps are restricted | reload
      shell: systemctl daemon-reload
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.6.4
# 1.8 Warning Banners
# Presenting a warning message prior to the normal user login may assist in the prosecution
# of trespassers on the computer system. Changing some of these login banners also has the
# side effect of hiding OS version information and other detailed system information from
# attackers attempting to target specific exploits at a system.
# 1.8.1 Command Line Warning Banners
# The /etc/motd , /etc/issue , and /etc/issue.net files govern warning banners for
# standard command line logins for both local and remote users.
# 1.8.1.1 Ensure message of the day is configured properly
# The contents of the /etc/motd file are displayed to users after login and function as a
# message of the day for authenticated users.
# Unix-based systems have typically displayed information about the OS release and patch
# level upon logging in to the system. This information can be useful to developers who are
# developing software for a particular OS platform. If mingetty(8) supports the following
# options, they display operating system information: \m - machine architecture \r -
# operating system release \s - operating system name \v - operating system version
# 1.8.1.2 Ensure local login warning banner is configured properly
- name: 1.8.1.2 Ensure local login warning banner is configured properly
    1.8.1.5 Ensure permissions on /etc/issue are configured"
  template:
    src: files/templates/issue.j2
    dest: /etc/issue
    owner: root
    group: root
    mode: "u-x,go-wx"
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.8.1.2
    - 1.8.1.5
# 1.8.1.3 Ensure remote login warning banner is configured properly
- name: 1.8.1.3 Ensure remote login warning banner is configured properly
    1.8.1.6 Ensure permissions on /etc/issue.net are configured"
  template:
    src: files/templates/issue.net.j2
    dest: /etc/issue.net
    owner: root
    group: root
    mode: "u-x,go-wx"
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.8.1.3
    - 1.8.1.6
# 1.9 Ensure updates, patches, and additional security software are installed
- name: 1.9 Ensure updates, patches, and additional security software are installed
  apt:
    upgrade: dist
  ignore_errors: yes
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - "1.9"
# 1.10 Ensure GDM is removed or login is configured
